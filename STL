ðŸ”¹ transform() â€” Convert string to lowercase
cpp
Copy
Edit
#include <algorithm>
#include <iostream>
using namespace std;

int main() {
    string str = "CodeForces";
    transform(str.begin(), str.end(), str.begin(), ::tolower);
    cout << str; // Output: codeforces
}
ðŸ”¹ sort() â€” Sort a vector
cpp
Copy
Edit
#include <algorithm>
#include <vector>
#include <iostream>
using namespace std;

int main() {
    vector<int> v = {5, 2, 8, 1};
    sort(v.begin(), v.end());
    for (int x : v) cout << x << " "; // Output: 1 2 5 8
}
ðŸ”¹ reverse() â€” Reverse a string
cpp
Copy
Edit
#include <algorithm>
#include <iostream>
using namespace std;

int main() {
    string s = "hello";
    reverse(s.begin(), s.end());
    cout << s; // Output: olleh
}
ðŸ”¹ count() â€” Count frequency of a value in a vector
cpp
Copy
Edit
#include <algorithm>
#include <vector>
#include <iostream>
using namespace std;

int main() {
    vector<int> v = {1, 2, 3, 2, 2};
    cout << count(v.begin(), v.end(), 2); // Output: 3
}
ðŸ”¹ find() â€” Find an element in a vector
cpp
Copy
Edit
#include <algorithm>
#include <vector>
#include <iostream>
using namespace std;

int main() {
    vector<int> v = {10, 20, 30};
    auto it = find(v.begin(), v.end(), 20);
    if (it != v.end()) {
        cout << "Found at index: " << it - v.begin(); // Output: 1
    } else {
        cout << "Not found";
    }
}
ðŸ”¹ accumulate() â€” Sum of all elements
cpp
Copy
Edit
#include <numeric>
#include <vector>
#include <iostream>
using namespace std;

int main() {
    vector<int> v = {1, 2, 3};
    int sum = accumulate(v.begin(), v.end(), 0);
    cout << sum; // Output: 6
}
ðŸ”¹ unique() â€” Remove adjacent duplicates
cpp
Copy
Edit
#include <algorithm>
#include <vector>
#include <iostream>
using namespace std;

int main() {
    vector<int> v = {1, 1, 2, 2, 2, 3};
    auto it = unique(v.begin(), v.end());
    v.resize(it - v.begin());
    for (int x : v) cout << x << " "; // Output: 1 2 3
}
ðŸ”¹ all_of() â€” Check if all elements satisfy a condition
cpp
Copy
Edit
#include <algorithm>
#include <vector>
#include <iostream>
using namespace std;

int main() {
    vector<int> v = {5, 10, 15};
    bool allPositive = all_of(v.begin(), v.end(), [](int x){ return x > 0; });
    cout << (allPositive ? "YES" : "NO"); // Output: YES
}
ðŸ”¥#include <iostream>
using namespace std;

/* 1. Check whether a number is even or odd */
void checkEvenOdd() {
    int num;
    cin >> num;
    if (num % 2 == 0)
        cout << "Even\n";
    else
        cout << "Odd\n";
}

/* 2. Factorial using loop */
void factorial() {
    int n;
    cin >> n;
    long long fact = 1;
    for (int i = 1; i <= n; i++) {
        fact = fact * i;
    }
    cout << "Factorial: " << fact << endl;
}

/* 3. Check if a number is prime */
void checkPrime() {
    int n;
    cin >> n;
    bool isPrime = true;

    if (n <= 1)
        isPrime = false;

    for (int i = 2; i * i <= n; i++) {
        if (n % i == 0) {
            isPrime = false;
            break;
        }
    }

    if (isPrime)
        cout << "Prime\n";
    else
        cout << "Not Prime\n";
}

/* 4. Fibonacci series up to n terms */
void fibonacci() {
    int n;
    cin >> n;
    int a = 0, b = 1;
    cout << a << " " << b << " ";
    for (int i = 2; i < n; i++) {
        int c = a + b;
        cout << c << " ";
        a = b;
        b = c;
    }
    cout << endl;
}

/* 5. Reverse a given integer number */
void reverseNumber() {
    int n, rev = 0;
    cin >> n;
    while (n != 0) {
        rev = rev * 10 + n % 10;
        n /= 10;
    }
    cout << "Reversed number: " << rev << endl;
}

/* 6. Swap two numbers */
void swapNumbers() {
    int a, b;
    cin >> a >> b;
    cout << "Before swap: a = " << a << ", b = " << b << endl;
    int temp = a;
    a = b;
    b = temp;
    cout << "After swap: a = " << a << ", b = " << b << endl;
}

/* 7. Print name and enrollment number */
void printInfo() {
    cout << "Name: Geddada Karthik\n";
    cout << "Enrollment No: E23CSEU1877\n"; // Replace with your actual number
}

int main() {
    // Call any function here one by one to test
    checkEvenOdd();
    factorial();
    checkPrime();
    fibonacci();
    reverseNumber();
    swapNumbers();
    printInfo();

    return 0;
}
